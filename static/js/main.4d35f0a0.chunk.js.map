{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","calculateWinner","squares","lines","i","length","a","b","c","Board","state","Array","fill","xIsNext","this","renderSquare","React","Component","Number","Numbers","boards","x","changeClassName","y","push","renderNumber","map","index","NumberGame","element","ReactDOM","render","document","getElementById"],"mappings":"4MAIA,SAASA,EAAOC,GACZ,OACI,4BAAQC,UAAU,SAASC,QAASF,EAAME,SACrCF,EAAMG,OAKnB,SAASC,EAAgBC,GAWrB,IAVA,IAAMC,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEFC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAC,IAAD,cACjBD,EAAMC,GADW,GAC5BE,EAD4B,KACzBC,EADyB,KACtBC,EADsB,KAEnC,GAAIN,EAAQI,IAAMJ,EAAQI,KAAOJ,EAAQK,IAAML,EAAQI,KAAOJ,EAAQM,GAClE,OAAON,EAAQI,GAGvB,OAAO,K,IAGLG,E,YACF,WAAYZ,GAAQ,IAAD,8BACf,4CAAMA,KACDa,MAAQ,CACTR,QAASS,MAAM,GAAGC,KAAK,MACvBC,SAAS,GAJE,E,0EAQNT,GAAI,IAAD,OACZ,OACI,kBAACR,EAAD,CACII,MAAOc,KAAKjB,MAAMK,QAAQE,GAC1BL,QAAS,kBAAM,EAAKF,MAAME,QAAQK,Q,+BAM1C,OACI,6BACI,yBAAKN,UAAU,aACVgB,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,IAEvB,yBAAKjB,UAAU,aACVgB,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,IAEvB,yBAAKjB,UAAU,aACVgB,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,S,GAlCnBC,IAAMC,WAyCPD,IAAMC,UA8EzB,SAASC,EAAOrB,GACZ,OACI,4BAAQC,UAAWD,EAAMC,UAAYD,EAAMC,UAAY,UAClDD,EAAMG,O,IAKbmB,E,qLACWf,EAAGN,GACZ,OACI,kBAACoB,EAAD,CACIlB,MAAOI,EACPN,UAAWA,M,+BAOnB,IADA,IAAMsB,EAAST,MAAM,GACZU,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxBD,EAAOC,GAAKV,MAAM,GAClB,IAAIW,GAAkB,EACjBD,EAAI,EAAK,GAAK,IACfC,GAAkB,GAEtB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACfA,EAAI,IAAM,IACVD,GAAmBA,GAEvBF,EAAOC,GAAGG,KAAKV,KAAKW,aAAa,GAAIH,EAAkB,SAAW,eAG1E,OACI,6BACKF,EAAOM,KAAI,SAAC1B,EAAO2B,GAChB,OAAIA,IAAWP,EAAOf,OAAS,EAEvB,yBAAKP,UAAU,aACVE,GAKL,yBAAKF,UAAU,eACVE,MAKjB,yBAAKF,UAAU,aACVgB,KAAKW,aAAa,GAClBX,KAAKW,aAAa,GAClBX,KAAKW,aAAa,GAClBX,KAAKW,aAAa,GAClBX,KAAKW,aAAa,GAClBX,KAAKW,aAAa,GAClBX,KAAKW,aAAa,GAClBX,KAAKW,aAAa,GAClBX,KAAKW,aAAa,S,GAnDjBT,IAAMC,WA0DtBW,E,iLAEE,OACI,yBAAK9B,UAAU,QACX,yBAAKA,UAAU,cACX,kBAACqB,EAAD,OAGJ,yBAAKrB,UAAU,aACX,8BACA,mC,GAVKkB,IAAMC,WAmBzBY,EACF,6BACI,kBAACD,EAAD,OAIRE,IAASC,OACLF,EACAG,SAASC,eAAe,U","file":"static/js/main.4d35f0a0.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n    return (\r\n        <button className=\"square\" onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nclass Board extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            squares: Array(9).fill(null),\r\n            xIsNext: true,\r\n        };\r\n    }\r\n\r\n    renderSquare(i) {\r\n        return (\r\n            <Square\r\n                value={this.props.squares[i]}\r\n                onClick={() => this.props.onClick(i)}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null),\r\n            }],\r\n            stepNumber: 0,\r\n            xIsNext: true,\r\n        };\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares: squares,\r\n            }]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext,\r\n        });\r\n    }\r\n\r\n    jumpTo(step) {\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = calculateWinner(current.squares);\r\n\r\n        const moves = history.map((step, move) => {\r\n            const desc = move ?\r\n                'Go to move #' + move :\r\n                'Go to game start';\r\n            return (\r\n                <li key={move}>\r\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n                </li>\r\n            );\r\n        });\r\n\r\n        let status;\r\n        if (winner) {\r\n            status = 'Winner: ' + winner;\r\n        } else {\r\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n        }\r\n\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board\r\n                        squares={current.squares}\r\n                        onClick={(i) => this.handleClick(i)}\r\n                    />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{status}</div>\r\n                    <ol>{moves}</ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n// ======================================= 数独 start\r\nfunction Number(props) {\r\n    return (\r\n        <button className={props.className ? props.className : 'square'}>\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\nclass Numbers extends React.Component {\r\n    renderNumber(i, className) {\r\n        return (\r\n            <Number\r\n                value={i}\r\n                className={className}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const boards = Array(9);\r\n        for (let x = 0; x < 9; x++) {\r\n            boards[x] = Array(9);\r\n            let changeClassName = false;\r\n            if ((x / 3) % 2 >= 1) {\r\n                changeClassName = true;\r\n            }\r\n            for (let y = 0; y < 9; y++) {\r\n                if (y % 3 === 0) {\r\n                    changeClassName = !changeClassName;\r\n                }\r\n                boards[x].push(this.renderNumber('', changeClassName ? 'square' : 'squareGrey'));\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n                {boards.map((value, index) => {\r\n                    if (index !== (boards.length - 1)) {\r\n                        return (\r\n                            <div className=\"board-row\">\r\n                                {value}\r\n                            </div>\r\n                        );\r\n                    } else {\r\n                        return (\r\n                            <div className=\"board-board\">\r\n                                {value}\r\n                            </div>\r\n                        );\r\n                    }\r\n                })}\r\n                <div className=\"board-row\">\r\n                    {this.renderNumber(1)}\r\n                    {this.renderNumber(2)}\r\n                    {this.renderNumber(3)}\r\n                    {this.renderNumber(4)}\r\n                    {this.renderNumber(5)}\r\n                    {this.renderNumber(6)}\r\n                    {this.renderNumber(7)}\r\n                    {this.renderNumber(8)}\r\n                    {this.renderNumber(9)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass NumberGame extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Numbers\r\n                    />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div></div>\r\n                    <ol></ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// ========================================\r\n\r\nconst element = (\r\n    <div>\r\n        <NumberGame/>\r\n    </div>\r\n);\r\n\r\nReactDOM.render(\r\n    element,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}